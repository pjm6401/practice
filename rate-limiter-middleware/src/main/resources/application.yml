# rate-limiter-middleware의 기본 설정
rate-limiter:
  enabled: true
  keyPrefix: "global:rate_limit"
  capacity: 3
  refillRate: 3
  includePaths:
    - "/api/process"
  excludePaths:
    - "/wait"        # 1. 대기 페이지 자체는 검사하면 안 됨
    - "/api/status"  # 2. 상태 확인 API도 검사하면 안 됨
    - "/error"       # 3. 에러 페이지도 제외
    - "/actuator/**" # 4. 상태 체크용 Actuator 경로도 제외

# --- Spring Boot 애플리케이션 기본 설정 ---
server:
  port: 8080

# --- 외부 서비스 연동 설정 ---
spring:
  # Redis 설정 (RedisTokenBucket, RedisWaitingQueue 용도)
  data:
    redis:
      host: localhost
      port: 6379
      # password: your-redis-password # 비밀번호가 있다면 주석 해제

  # Kafka 설정
  kafka:
    # 접속할 Kafka 브로커 주소
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}

    # Producer 설정 (대기열 정보를 Kafka 토픽에 발행)
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      # Json 직렬화 시 타입 정보를 헤더에 추가
      properties:
        spring:
          json:
            add:
              type:
                headers: true

    # Consumer 설정 (대기열 정보를 구독하여 처리할 서비스에서 필요)
    consumer:
      group-id: waiting-list-group # 컨슈머 그룹 ID
      auto-offset-reset: earliest # 오프셋이 없을 때 가장 처음부터 메시지를 읽음
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      # Json 역직렬화 시 신뢰할 수 있는 패키지 지정 (보안상 중요)
      properties:
        spring:
          json:
            trusted:
              packages: "com.project.*" # 실제 프로젝트의 DTO 패키지 경로

# Kafka 토픽 이름 정의 (커스텀 프로퍼티)
topic:
  name: waiting-list